///**
// * 3L was made for YOU to help you create awesome websites
// * and fill the Internet with excessive amount of Love! ♥
// *
// * Made by Mateusz Kocz   -> http://radiatingstar.com
// *
// * Watch 3L on Github:    -> https://github.com/mateuszkocz/3l
// * Submit an issue:       -> https://github.com/mateuszkocz/3l/issues?state=open
// *
// * Download the newest version at http://mateuszkocz.github.com/3l
// *
// * MIT Licensed
// * Includes normalize.css, reset.css and some code from HTML5 Boilerplate.
// * For the licencess refer to the LICENCES.md.
// *
// * Version: 1.4.4 (2013.06.02)
// *
// * To compile all of the code you need to use a compiler
// * that supports JavaScript code and guarder mixins.
// * 
// * Recommended compilers:
// * * Winless http://winless.org/
// * * Prepross http://alphapixels.com/prepros/
// * * Codekit http://incident57.com/codekit/
// **/


@import 'generic/debugger.less';
@import 'generic/reset-normalize.less';
@import	'generic/html5-boilerplate.less';
@import	'extension/helpers.less';

///**
// * Font-face
// * 
// * Easily include fonts on you website.
// *
// * @USAGE
// * Put the .font-face() mixin in your CSS. Provide at least two arguments:
// * -- font's name (string),
// * -- font's filename (without filetype),
// * -- font's path / URL (string) [don't forget to put the fonts in all formats in the folder].
// *
// * Optionally you can provide the font's weight and style. By default they're normal.
// *
// * Font's formats you need to use: EOT, WOFF, TTF and SVG.
// **/

.font-face(@name, @filename, @path, @weight:normal, @style:normal) {
	@font-face {
		font-family: @name;
		src: url('@{path}@{filename}.eot');
		src: local('☺'), url('@{path}@{filename}.woff') format('woff'), url('@{path}@{filename}.ttf') format('truetype'), url('@{path}@{filename}.svg') format('svg');
		font-weight: @weight;
		font-style: @style;
	}
}

@import	'extensions/box-model.less';
@import	'extensions/borders.less';
@import	'extensions/image-filters.less';
@import	'extensions/transparency-opacity.less';
@import	'extensions/gradients.less';
@import 'extensions/background.less';



///**
// * Columns layout
// * 
// * Divide a block of text into columns as seen in newspapers.
// * 
// * @USAGE
// * Use .columns() class providing arguments in the brackets.
// * None of those arguments are required, but unless you provide one, columns
// * layout won't work. Available arguments:
// * -- [integer] - declare a column-count. Unless declared, their width will 
// *    equal to division of the block's width minus column-gaps and declared integer.
// *    Default value is "auto" which means that width of columns will be determined
// *    by column-width value.
// * -- [width] - declare every column width in px, em and % (of containing block).
// *    Default value is "auto" - column width will be equal to division of the 
// *    block's width and declared column-count
// * 
// * Usage of supporting classes:
// * You can declare the gaps between columns by .column-gap() class that takes
// * width type argument. Default value is "normal" and equals to 1em.
// * 
// * Declare a vertical rule between columns using .column-rule(). It's the same
// * type of declaration as in borders, that is width, style and colour. By default
// * there is no rule.
// * 
// * @EXAMPLES
// * 1. .column(2, 20px) // Two columns with 20px width.
// * 2. .column(5) // Five columns layout.
// * 3. element {
// *        .column(100px);					// A 100px width columns
// * 		.column-gap(10px);				// with 10px gap between
// * 		.column-rule(1px solid black);	// and 1px thick, solid, black vertical rule.
// *	}
// *
// * @BROWSERS SUPPORT
// * IE10+ and every other (except for Opera Mini)
// * 
// * @LINKS
// * * https://developer.mozilla.org/en-US/docs/CSS/columns
// * * http://caniuse.com/#feat=multicolumn
// **/

.columns (...) {
	-webkit-columns: @arguments;
	-moz-columns: @arguments;
	columns: @arguments;
	}
.column-gap (@gap) {
	-webkit-column-gap: @gap;
	-moz-column-gap: @gap;
	column-gap: @gap;
	}
.columns-gap (@gap) {.column-gap(@gap);}
.column-rule (...) {
	-webkit-column-rule: @arguments;
	-moz-column-rule: @arguments;
	column-rule: @arguments;
	}
.columns-rule (...) {.column-rule(@arguments);}
.column-fill (@fill) {
	-webkit-column-fill: @fill;
	-moz-column-fill: @fill;
	column-fill: @fill;
}
.columns-fill (@fill) {.column-fill(@fill);}


@import	'extensions/transforms.less';	
@import	'extensions/animate.less';

///**
// * User-select
// *
// * Controls the selection model of an element.
// *
// * @ABOUT
// * This property takes following values:
// * -- none - none of the element's content can be selected.
// * -- text [default] - the element's contents follow a standard text content selection model.
// * -- toggle - the element's contents follow a standard toggling content model.
// * -- element - one element at a time may be selected.
// * -- elements - one or more elements at a time may be selected.
// * -- all - Only the entire contents as a whole can be selected.
// *
// * @BROWSERS SUPPORT
// * IE10+, Firefox, Chrome, Safari (not Opera)
// *
// * @LINKS
// * * https://developer.mozilla.org/en-US/docs/CSS/user-select
// * * http://caniuse.com/#search=user-select
// **/

.user-select (...) {
	-webkit-user-select: @arguments;
	-moz-user-select: @arguments;
	-ms-user-select: @arguments;
	user-select: @arguments;
}

///**
// * Appearance
// *
// * @LINKS
// * * https://developer.mozilla.org/en-US/docs/CSS/-moz-appearance
// **/

.appearance (@appearance) {
    -webkit-appearance: @appearance;
    -moz-appearance: @appearance;
}

///**
// * Selection
// *
// * Style a visual representtion of selecting elements and objects.
// * 
// * @USAGE
// * You can use it on the root of your CSS to make the selection style global
// * or inside a specyfic element. Provide two arguments: font color and background-color.
// * 
// * @EXAMPLES
// * 1. .selection(red, blue);
// * 2. p {
// *        .selection(red, blue)
// *    }
// **/

.selection(@text-color, @background-color) {
	&::-moz-selection {color: @text-color; background-color: @background-color;}
	&::selection {color: @text-color; background-color: @background-color;}
}

///**
// * hasLayout
// * 
// * A hack for IE.
// *
// * @LINKS
// * * http://reference.sitepoint.com/css/haslayout
// **/

.hasLayout() {*zoom: 1;}


.ninja() {
	color: black;
	visibility: hidden;
}